stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  SERVICE_NAME: nestkit

build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  tags:
    - build

deploy:
  stage: deploy
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - |
      echo -e "$env" > .env
      source .env
      if docker service ls | grep -q $SERVICE_NAME; then
        env_vars=$(cat .env | xargs -I {} echo --env-add {})
        docker service update --with-registry-auth $env_vars --image $CI_REGISTRY_IMAGE:latest $SERVICE_NAME
      else
        docker service create --with-registry-auth --env-file .env --publish ${APP_PORT}:${APP_PORT} --network nestkit_network --name $SERVICE_NAME $CI_REGISTRY_IMAGE:latest
      fi
  tags:
    - deploy
  only:
    - main
  when: manual